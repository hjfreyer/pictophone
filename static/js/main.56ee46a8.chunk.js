(this["webpackJsonppictophone-fe"]=this["webpackJsonppictophone-fe"]||[]).push([[0],{41:function(e,t,r){e.exports=r(89)},46:function(e,t,r){},48:function(e,t,r){},89:function(e,t,r){"use strict";r.r(t);var i=r(0),n=r.n(i),a=r(38),p=r.n(a),s=(r(46),r(10)),o=r.n(s),d=r(21),u=r(9),y=(r(48),r(11)),l=r.n(y),c=(r(49),r(13)),m=r(6),g=r(14),f=r(39),b=new(r.n(f).a)({allErrors:!0,coerceTypes:!1,format:"fast",nullable:!0,unicode:!0,uniqueItems:!0,useDefaults:!0});b.addMetaSchema(r(87));b.addSchema({$schema:"http://json-schema.org/draft-07/schema#",definitions:{Action:{else:{else:{else:{properties:{kind:{enum:["join_game","start_game","make_move"],type:"string"}},required:["kind"]},if:{properties:{kind:{enum:["make_move"],type:"string"}},required:["kind"]},then:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["make_move"],type:"string"},playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["gameId","kind","playerId","submission"],type:"object"}},if:{properties:{kind:{enum:["start_game"],type:"string"}},required:["kind"]},then:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["start_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"}},if:{properties:{kind:{enum:["join_game"],type:"string"}},required:["kind"]},then:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["join_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"}},Drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},FinishedGame:{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},series:{items:{defaultProperties:[],properties:{entries:{items:{defaultProperties:[],properties:{playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["playerId","submission"],type:"object"},type:"array"}},required:["entries"],type:"object"},type:"array"},state:{enum:["GAME_OVER"],type:"string"}},required:["playerIds","series","state"],type:"object"},GameLog:{defaultProperties:[],properties:{entries:{items:{defaultProperties:[],properties:{action:{anyOf:[{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["join_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["start_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["make_move"],type:"string"},playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["gameId","kind","playerId","submission"],type:"object"}]},timestamp:{}},required:["action","timestamp"],type:"object"},type:"array"},lastTimestamp:{}},required:["entries","lastTimestamp"],type:"object"},GameLogEntry:{defaultProperties:[],properties:{action:{anyOf:[{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["join_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["start_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["make_move"],type:"string"},playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["gameId","kind","playerId","submission"],type:"object"}]},timestamp:{}},required:["action","timestamp"],type:"object"},JoinGame:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["join_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},MakeMove:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["make_move"],type:"string"},playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["gameId","kind","playerId","submission"],type:"object"},Path:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},PlayerGame:{anyOf:[{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},state:{enum:["FIRST_PROMPT","UNSTARTED","WAITING_FOR_PROMPT"],type:"string"}},required:["playerIds","state"],type:"object"},{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},prompt:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]},state:{enum:["RESPOND_TO_PROMPT"],type:"string"}},required:["playerIds","prompt","state"],type:"object"},{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},series:{items:{defaultProperties:[],properties:{entries:{items:{defaultProperties:[],properties:{playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["playerId","submission"],type:"object"},type:"array"}},required:["entries"],type:"object"},type:"array"},state:{enum:["GAME_OVER"],type:"string"}},required:["playerIds","series","state"],type:"object"}]},Point:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},PromptGame:{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},prompt:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]},state:{enum:["RESPOND_TO_PROMPT"],type:"string"}},required:["playerIds","prompt","state"],type:"object"},Series:{defaultProperties:[],properties:{entries:{items:{defaultProperties:[],properties:{playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["playerId","submission"],type:"object"},type:"array"}},required:["entries"],type:"object"},SeriesEntry:{defaultProperties:[],properties:{playerId:{type:"string"},submission:{anyOf:[{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"},{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}]}},required:["playerId","submission"],type:"object"},SimpleGame:{defaultProperties:[],properties:{playerIds:{items:{type:"string"},type:"array"},state:{enum:["FIRST_PROMPT","UNSTARTED","WAITING_FOR_PROMPT"],type:"string"}},required:["playerIds","state"],type:"object"},StartGame:{defaultProperties:[],properties:{gameId:{type:"string"},kind:{enum:["start_game"],type:"string"},playerId:{type:"string"}},required:["gameId","kind","playerId"],type:"object"},Submission:{else:{else:{properties:{kind:{enum:["word","drawing"],type:"string"}},required:["kind"]},if:{properties:{kind:{enum:["drawing"],type:"string"}},required:["kind"]},then:{defaultProperties:[],properties:{drawing:{defaultProperties:[],properties:{paths:{items:{defaultProperties:[],properties:{points:{items:{defaultProperties:[],properties:{x:{type:"number"},y:{type:"number"}},required:["x","y"],type:"object"},type:"array"}},required:["points"],type:"object"},type:"array"}},required:["paths"],type:"object"},kind:{enum:["drawing"],type:"string"}},required:["drawing","kind"],type:"object"}},if:{properties:{kind:{enum:["word"],type:"string"}},required:["kind"]},then:{defaultProperties:[],properties:{kind:{enum:["word"],type:"string"},word:{type:"string"}},required:["kind","word"],type:"object"}}}},"Schema");var h=r(22);function w(e){if(0==e.points.length)return"";if(1==e.points.length){var t=e.points[0],r=t.x,i=t.y;return"M ".concat(r," ").concat(i," L ").concat(r+1," ").concat(i)}var n="M ".concat(e.points[0].x," ").concat(e.points[0].y),a=!0,p=!1,s=void 0;try{for(var o,d=e.points.slice(1)[Symbol.iterator]();!(a=(o=d.next()).done);a=!0){var u=o.value,y=u.x,l=u.y;n+="L ".concat(y," ").concat(l)}}catch(c){p=!0,s=c}finally{try{a||null==d.return||d.return()}finally{if(p)throw s}}return n}var j=function(e){var t=e.drawing,r=e.width,a=e.height,p=Object(i.useRef)(null);return Object(i.useEffect)((function(){var e=p.current;e.style.width=r+"px",e.style.height=a+"px"})),n.a.createElement("svg",{ref:p,style:{touchAction:"none"}},t.paths.map((function(e,t){return n.a.createElement("path",{key:t,d:w(e),stroke:"black",fill:"transparent"})})))};var P=function(e){var t=e.draft,r=e.onChange;return n.a.createElement("div",{onTouchStart:function(e){e.preventDefault(),console.log("touchstart"),r(Object(h.a)(t,(function(t){for(var r=0;r<e.changedTouches.length;r++){var i=e.changedTouches.item(r);t.inProgress[i.identifier]=t.drawing.paths.length;var n=e.target.getBoundingClientRect(),a={x:i.clientX-n.left,y:i.clientY-n.top};t.drawing.paths.push({points:[a]})}})))},onTouchMove:function(e){e.preventDefault(),console.log("touchmove"),r(Object(h.a)(t,(function(t){for(var r=0;r<e.changedTouches.length;r++){var i=e.changedTouches.item(r),n=e.target.getBoundingClientRect(),a={x:i.clientX-n.left,y:i.clientY-n.top};t.drawing.paths[t.inProgress[i.identifier]].points.push(a)}})))},style:{touchAction:"none"}},n.a.createElement(j,{drawing:t.drawing,width:500,height:500}))},k=function(e){var t=e.series,r=e.seriesIdx;return n.a.createElement("div",null,n.a.createElement("h2",null,"Series ",r),t.entries.map((function(e,t){return n.a.createElement(I,{key:t,entry:e})})))},I=function(e){var t=e.entry;return"word"===t.submission.kind?n.a.createElement("div",null,n.a.createElement("h3",null,t.playerId," said"),n.a.createElement("div",null,t.submission.word)):n.a.createElement("div",null,n.a.createElement("h3",null,t.playerId," drew"),n.a.createElement(j,{drawing:t.submission.drawing,width:500,height:500}))},E=function(e){var t=e.playerGame,r=e.startGame,a=e.submit,p=Object(i.useState)(""),s=Object(u.a)(p,2),o=s[0],d=s[1],y=Object(i.useState)({drawing:{paths:[]},inProgress:{}}),l=Object(u.a)(y,2),c=l[0],m=l[1],g=n.a.createElement("div",null,"Players: ",t.playerIds.map((function(e,t){return n.a.createElement("div",{key:t},e)}))),f=function(e){e.preventDefault(),a({kind:"word",word:o}),d("")};switch(t.state){case"UNSTARTED":return n.a.createElement("div",null,g,"Waiting to start game.",n.a.createElement("button",{onClick:r},"Start Game"));case"FIRST_PROMPT":return n.a.createElement("div",null,g,n.a.createElement("div",null,"Come up with a thing!"),n.a.createElement("form",{onSubmit:f},n.a.createElement("input",{value:o,onChange:function(e){return d(e.target.value)}}),n.a.createElement("button",null,"Submit")));case"WAITING_FOR_PROMPT":return n.a.createElement("div",null,g,"Chill out for a sec while everyone else finishes.");case"RESPOND_TO_PROMPT":return"word"===t.prompt.kind?n.a.createElement("div",null,g,n.a.createElement("div",null,"Your prompt is: ",t.prompt.word),n.a.createElement("div",null,"Drawz!"),n.a.createElement(P,{draft:c,onChange:m}),n.a.createElement("button",{onClick:function(){a({kind:"drawing",drawing:c.drawing})}},"Submit")):n.a.createElement("div",null,g,n.a.createElement("div",null,"Your prompt is:"),n.a.createElement(j,{drawing:t.prompt.drawing,width:500,height:500}),n.a.createElement("div",null,"Describe!"),n.a.createElement("form",{onSubmit:f},n.a.createElement("input",{value:o,onChange:function(e){return d(e.target.value)}}),n.a.createElement("button",null,"Submit")));case"GAME_OVER":return n.a.createElement("div",null,g,t.series.map((function(e,t){return n.a.createElement(k,{key:t,series:e,seriesIdx:t})})))}},q=l.a.initializeApp({projectId:"pictophone-app"}).firestore();window.db=q;var v=function(){var e=Object(i.useState)(""),t=Object(u.a)(e,2),r=t[0],a=t[1],p=Object(m.f)();return n.a.createElement("div",null,n.a.createElement("h1",null,"Home"),"Username",n.a.createElement("form",{onSubmit:function(){return p.push("/p/"+r)}},n.a.createElement("input",{type:"text",value:r,onChange:function(e){return a(e.target.value)}}),n.a.createElement("button",null,"Submit")))},O=function(e){var t=e.dispatch,r=Object(m.g)().playerId;return n.a.createElement(x,{playerId:r,dispatch:t})},x=function(e){var t=e.playerId,r=e.dispatch;return n.a.createElement("div",null,n.a.createElement("h1",null,"User page for ",t),n.a.createElement(_,{join:function(e){return r({kind:"join_game",playerId:t,gameId:e})}}),n.a.createElement("h2",null,"Existing Games"),n.a.createElement(c.a,{path:"versions/0/players/".concat(t,"/games"),render:function(e){var r=e.isLoading,i=e.data;return n.a.createElement("div",null,r?n.a.createElement("span",null,"Loading..."):n.a.createElement("div",null,i.map((function(e){return n.a.createElement("div",{key:e.id},n.a.createElement(g.b,{to:"/p/".concat(t,"/g/").concat(e.id)},e.id))}))))}}))},_=function(e){var t=e.join,r=Object(i.useState)(""),a=Object(u.a)(r,2),p=a[0],s=a[1];return n.a.createElement("div",null,n.a.createElement("h2",null,"Join A Game"),n.a.createElement("form",{onSubmit:function(e){e.preventDefault(),t(p)}},n.a.createElement("input",{type:"text",value:p,onChange:function(e){return s(e.target.value)}}),n.a.createElement("button",null,"Submit")))},S=function(e){var t=e.dispatch,r=Object(m.g)(),i=r.playerId,a=r.gameId,p=function(){return t({kind:"start_game",playerId:i,gameId:a})},s=function(e){return t({kind:"make_move",playerId:i,gameId:a,submission:e})};return n.a.createElement("div",null,n.a.createElement("h1",null,"Game ",a),n.a.createElement(c.b,{path:"versions/0/players/".concat(i,"/games/").concat(a),render:function(e){var t=e.isLoading,r=e.data;if(t)return n.a.createElement("span",null,"Loading...");var i=function(e){var t=b.getSchema("Schema#/definitions/".concat(e));return function(r){if(!t)throw new Error("No validator defined for Schema#/definitions/".concat(e));if(!t(r))throw new Error("Invalid "+e+": "+b.errorsText(t.errors.filter((function(e){return"if"!==e.keyword})),{dataVar:e}));return r}}("PlayerGame")(r);return n.a.createElement(E,{playerGame:i,startGame:p,submit:s})}}))};function T(e){return R.apply(this,arguments)}function R(){return(R=Object(d.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("http://localhost:3000/action",{method:"post",body:JSON.stringify(t),mode:"cors",headers:{"Content-Type":"application/json",Accept:"application/json"}});case 2:e.sent;case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var G=function(){var e=function(){var e=Object(d.a)(o.a.mark((function e(t){return o.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,T(t);case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return n.a.createElement(c.c,{firebase:l.a},n.a.createElement(g.a,null,n.a.createElement("div",null,n.a.createElement("nav",null,n.a.createElement("ul",null,n.a.createElement("li",null,n.a.createElement(g.b,{to:"/"},"Home")))),n.a.createElement(m.c,null,n.a.createElement(m.a,{path:"/",exact:!0},n.a.createElement(v,null)),n.a.createElement(m.a,{path:"/p/:playerId",exact:!0},n.a.createElement(O,{dispatch:e})),n.a.createElement(m.a,{path:"/p/:playerId/g/:gameId",exact:!0},n.a.createElement(S,{dispatch:e}))))))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));p.a.render(n.a.createElement(G,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[41,1,2]]]);
//# sourceMappingURL=main.56ee46a8.chunk.js.map