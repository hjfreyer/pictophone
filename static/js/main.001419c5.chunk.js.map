{"version":3,"sources":["Drawing.tsx","Canvas.tsx","model/Upload.validator.ts","GameView.tsx","Home.tsx","model/Export.validator.ts","model/UploadResponse.validator.ts","App.tsx","config.ts","serviceWorker.ts","index.tsx"],"names":["renderPath","p","length","x","y","res","idx","Drawing","drawing","width","height","svgRef","useRef","useEffect","e","current","style","scaled","paths","map","path","sx","sy","i","push","scalePath","ref","key","d","stroke","strokeWidth","fill","Canvas","draft","onChange","divRef","pointerStart","pointers","produce","ptId","inProgress","rect","getBoundingClientRect","pt","left","top","pointerMove","touchesToPointers","touches","touch","item","identifier","clientX","clientY","mouseToPointers","mouse","className","onTouchStart","preventDefault","changedTouches","onTouchMove","onMouseDown","buttons","onMouseMove","touchAction","ajv","Ajv","addMetaSchema","require","rawValidateUpload","compile","validate","value","Error","errorsText","errors","filter","keyword","dataVar","inspect","ActiveGame","playerGame","submitWord","submitDrawing","initDraftDrawing","useState","textSub","setTextSub","draftDrawing","setDraftDrawing","window","innerWidth","innerHeight","dims","setDims","addEventListener","doTextSub","doDrawingSub","firstPrompt","id","onSubmit","target","waitForPrompt","canvasWidth1","canvasWidth","Math","min","canvasHeight","state","prompt","kind","word","onClick","drawingId","respond","Series","serieses","series","seriesIdx","entries","eIdx","entry","Entry","container","offsetWidth","offsetHeight","submission","widthFromHeight","widthForBox","DownloadDrawing","downloaded","setDownloaded","a","fetch","validateUpload","json","GameView","startGame","playerList","playerIds","JoinGame","join","gid","setGid","type","Home","playerId","dispatch","gameId","action","version","render","isLoading","data","r","to","rawValidateExport","rawValidateUploadResponse","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firebase","initializeApp","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","Landing","Fragment","firebaseAuth","GamePage","useParams","upload","resp","pg","validateExport","postAction","body","Config","method","JSON","stringify","mode","headers","postUpload","u","validateUploadResponse","Content","location","useLocation","ready","authInfo","setAuthInfo","onAuthStateChanged","user","signOut","pathname","exact","uid","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","response","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"0SA8CA,SAASA,EAAWC,GAChB,GAAiB,IAAbA,EAAEC,OACF,MAAO,GAEX,GAAiB,IAAbD,EAAEC,OAAc,CAChB,IAAMC,EAAIF,EAAE,GACNG,EAAIH,EAAE,GACZ,MAAM,KAAN,OAAYE,EAAZ,YAAiBC,EAAjB,cAAwBD,EAAI,EAA5B,YAAiCC,GAGrC,IADA,IAAIC,EAAG,YAAQJ,EAAE,GAAV,YAAgBA,EAAE,IAChBK,EAAM,EAAGA,EAAML,EAAEC,OAAQI,GAAO,EACrCD,GAAG,YAASJ,EAAEK,GAAX,YAAmBL,EAAEK,EAAM,IAElC,OAAOD,EAGIE,MA7CgC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACxDC,EAASC,iBAAsB,MAErCC,qBAAU,WACN,IAAMC,EAAmBH,EAAOI,QAEhCD,EAAEE,MAAMP,MAAQA,EAAQ,KACxBK,EAAEE,MAAMN,OAASA,EAAS,QAG9B,IAAMO,EAAuB,CACzBC,MAAOV,EAAQU,MAAMC,KAAI,SAAAC,GAAI,OAnBrC,SAAmBA,EAAgBC,EAAYC,GAE3C,IADA,IAAMjB,EAAgB,GACbkB,EAAI,EAAGA,EAAIH,EAAKlB,OAAQqB,GAAK,EAClClB,EAAImB,KAAKJ,EAAKG,GAAKF,EAAID,EAAKG,EAAI,GAAKD,GAEzC,OAAOjB,EAc8BoB,CAAUL,EAAMX,EAAOC,OAG5D,OACI,yBAAKgB,IAAKf,GAEFM,EAAOC,MAAMC,KAAI,SAAClB,EAAGK,GAAJ,OACb,0BAAMqB,IAAKrB,EACPsB,EAAG5B,EAAWC,GACd4B,OAAO,QACPC,YAAY,IACZC,KAAK,qBC8DdC,EAhF8B,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUzB,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC9DyB,EAASvB,iBAAuB,MAEtC,SAASwB,EAAaC,GAClBH,EAASI,YAAQL,GAAO,SAACA,GACrB,IAAK,IAAMM,KAAQF,EAAU,CACzBJ,EAAMO,WAAWD,GAAQN,EAAMzB,QAAQU,MAAMhB,OAC7C,IAAMuC,EAAON,EAAOpB,QAAS2B,wBACvBC,EAAK,CACPxC,GAAIkC,EAASE,GAAMpC,EAAIsC,EAAKG,MAAQnC,EACpCL,GAAIiC,EAASE,GAAMnC,EAAIqC,EAAKI,KAAOnC,GAEvCuB,EAAMzB,QAAQU,MAAMM,KAAK,CAACmB,EAAGxC,EAAGwC,EAAGvC,SAK/C,SAAS0C,EAAYT,GACjBH,EAASI,YAAQL,GAAO,SAACA,GACrB,IAAK,IAAMM,KAAQF,EAAU,CACzB,IAAMI,EAAON,EAAOpB,QAAS2B,wBACvBC,EAAK,CACPxC,GAAIkC,EAASE,GAAMpC,EAAIsC,EAAKG,MAAQnC,EACpCL,GAAIiC,EAASE,GAAMnC,EAAIqC,EAAKI,KAAOnC,GAEvCuB,EAAMzB,QAAQU,MAAMe,EAAMO,WAAWD,IAAOf,KAAKmB,EAAGxC,EAAGwC,EAAGvC,QAKtE,SAAS2C,EAAkBC,GAEvB,IADA,IAAM3C,EAAkB,GACfC,EAAM,EAAGA,EAAM0C,EAAQ9C,OAAQI,IAAO,CAC3C,IAAM2C,EAAQD,EAAQE,KAAK5C,GAC3BD,EAAI4C,EAAME,YAAc,CACpBhD,EAAG8C,EAAMG,QACThD,EAAG6C,EAAMI,SAGjB,OAAOhD,EAGX,SAASiD,EAAgBxC,GACrB,MAAO,CACHyC,MAAO,CAAEpD,EAAGW,EAAEsC,QAAShD,EAAGU,EAAEuC,UAsBpC,OACI,yBACI3B,IAAKS,EACLqB,UAAU,SACVC,aAtBR,SAAoB3C,GAChBA,EAAE4C,iBACFtB,EAAaW,EAAkBjC,EAAE6C,kBAqB7BC,YAlBR,SAAmB9C,GACfA,EAAE4C,iBACFZ,EAAYC,EAAkBjC,EAAE6C,kBAiB5BE,YAdR,SAAoB/C,GACE,IAAdA,EAAEgD,SAAiB1B,EAAakB,EAAgBxC,KAchDiD,YAXR,SAAmBjD,GACG,IAAdA,EAAEgD,SAAiBhB,EAAYQ,EAAgBxC,KAW/CE,MAAO,CAAEgD,YAAa,SACtB,kBAAC,EAAD,CAASxD,QAASyB,EAAMzB,QACpBC,MAAOA,EAAOC,OAAQA,M,yBC5FzBuD,EAAM,IAAIC,IAAI,CAAC,WAAY,EAAK,aAAc,EAAM,OAAS,OAAO,UAAW,EAAK,SAAU,EAAK,aAAc,EAAK,aAAc,IAEjJD,EAAIE,cAAcC,EAAQ,KAEnB,IAyCDC,EAAoBJ,EAAIK,QAzCF,CAC1B,QAAW,0CACX,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,MAAS,CACP,MAAS,CACP,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,KAAQ,UAGZ,SAAY,CACV,SAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,KAAQ,CACN,KAAQ,CACN,WAEF,KAAQ,WAGZ,SAAY,CACV,QAEF,KAAQ,aAMC,SAASC,EAASC,GAC/B,GAAIH,EAAkBG,GACpB,OAAOA,EAEP,MAAM,IAAIC,MACRR,EAAIS,WAAWL,EAAkBM,OAAQC,QAAO,SAAC9D,GAAD,MAA0B,OAAdA,EAAE+D,WAAmB,CAACC,QAAS,WAC3F,OACAC,kBAAQP,IC3Cd,IA4BMQ,EAAwC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAE/DC,EAAmB,CACrB5E,QAAS,CACLU,MAAO,IAEXsB,WAAY,IANyE,EAS3D6C,mBAAS,IATkD,mBASlFC,EATkF,KASzEC,EATyE,OAUjDF,mBAAuBD,GAV0B,mBAUlFI,EAVkF,KAUpEC,EAVoE,OAYjEJ,mBAAS,CAC7B5E,MAAOiF,OAAOC,WACdjF,OAAQgF,OAAOE,cAdsE,mBAYlFC,EAZkF,KAY5EC,EAZ4E,KAiBzFjF,qBAAU,WACN,OAAO6E,OAAOK,iBAAiB,UAAU,kBAAMD,EAAQ,CACnDrF,MAAOiF,OAAOC,WACdjF,OAAQgF,OAAOE,mBAEpB,IAEH,IAAMI,EAAY,SAAClF,GACfA,EAAE4C,iBACFwB,EAAWI,GACXC,EA1Ba,KA6BXU,EAAe,WACjBd,EAAcK,EAAahF,SAC3BiF,EAAgBL,IAGdc,EAAc,0BAAMC,GAAG,QACzB,+CACA,yBAAK3C,UAAU,gBAAf,yBACA,0BAAM4C,SAAUJ,GACZ,2BAAOxB,MAAOc,EAASpD,SAAU,SAAApB,GAAC,OAAIyE,EAAWzE,EAAEuF,OAAO7B,UAC1D,4CAIF8B,EAAgB,0BAAMH,GAAG,QAC3B,+CACA,yBAAK3C,UAAU,gBAAf,sDAME+C,EAA+B,GADD,GAAdV,EAAKnF,QACc,EACnC8F,EAAcC,KAAKC,IAAIH,EAA2B,IAAbV,EAAKpF,OAC1CkG,EAA6B,EAAdH,EAAkB,EAqBvC,OAAQvB,EAAW2B,OACf,IAAK,eACD,OAAOV,EACX,IAAK,qBACD,OAAOI,EACX,IAAK,oBACD,OAzBQ,SAACrB,GAAD,MACe,SAA3BA,EAAW4B,OAAOC,KACZ,0BAAMX,GAAG,QACP,yBAAK3C,UAAU,eACVyB,EAAW4B,OAAOE,MAEvB,kBAAC,EAAD,CAAQ9E,MAAOuD,EAActD,SAAUuD,EACnChF,MAAO+F,EAAa9F,OAAQiG,IAChC,4BAAQK,QAASf,GAAjB,WAEF,0BAAME,GAAG,QACP,kBAAC,EAAD,CAAiBc,UAAWhC,EAAW4B,OAAOI,UAC1CxG,MAAO+F,EAAa9F,OAAQiG,IAChC,0BAAMP,SAAUJ,GACZ,2BAAOxB,MAAOc,EAASpD,SAAU,SAAApB,GAAC,OAAIyE,EAAWzE,EAAEuF,OAAO7B,UAC1D,4CAUD0C,CAAQjC,KAQrBkC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrC,OAAO,0BAAMjB,GAAG,WACZ,yBAAK3C,UAAU,UAAf,sBAII4D,EAASjG,KAAI,SAACkG,EAAQC,GAAT,OAAuB,yBAAK3F,IAAK2F,EAAW9D,UAAU,UAE3D6D,EAAOE,QAAQpG,KAAI,SAACL,EAAG0G,GAAJ,OAAa,kBAAC,EAAD,CAAO7F,IAAK6F,EAAMC,MAAO3G,aAOvE4G,EAAkD,SAAC,GAAe,IAAbD,EAAY,EAAZA,MACjDE,EAAY/G,iBAAuB,MAD0B,EAE3CyE,mBAAS,CAAE5E,MAAO,EAAGC,OAAQ,IAFc,mBAE5DmF,EAF4D,KAEtDC,EAFsD,KAWnE,GAPAjF,qBAAU,WACNiF,EAAQ,CACJrF,MAAOkH,EAAU5G,QAAS6G,YAC1BlH,OAAQiH,EAAU5G,QAAS8G,iBAEhC,IAE2B,SAA1BJ,EAAMK,WAAWhB,KACjB,OAAO,yBAAKpF,IAAKiG,EACbnE,UAAU,SAASiE,EAAMK,WAAWf,MAExC,IAAMtG,EAQd,SAAqBA,EAAeC,GAChC,IAAIqH,EAA2B,IAATrH,EACtB,OAAO+F,KAAKC,IAAIjG,EAAOsH,GAVLC,CAAYnC,EAAKpF,MAAOoF,EAAKnF,QAC3C,OAAO,yBAAKgB,IAAKiG,EAAWnE,UAAU,WAClC,kBAAC,EAAD,CAAiByD,UAAWQ,EAAMK,WAAWb,UACzCxG,MAAOA,EAAOC,OAAQ,EAAID,EAAQ,MAgBlD,IAAMwH,EAAkD,SAAC,GAAkC,IAAhChB,EAA+B,EAA/BA,UAAWxG,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAAa,EAClD2E,mBAA8B,MADoB,mBAC/E6C,EAD+E,KACnEC,EADmE,KAatF,OAXAtH,qBAAU,WACN,sBAAC,8BAAAuH,EAAA,sEACqBC,MAAM,0DAAD,OACuCpB,GAAa,IAF9E,cACS5G,EADT,YAKaiI,EALb,SAKkCjI,EAAIkI,OALtC,mBAKS3G,GALT,cAMGuG,EAAcvG,GANjB,0CAAD,KAQD,CAACqF,IAEe,OAAfiB,EACO,2CAGJ,kBAAC,EAAD,CAAS1H,QAAS0H,EAAYzH,MAAOA,EAAOC,OAAQA,KAGhD8H,EA1L2B,SAAC,GAA0D,IAAxDvD,EAAuD,EAAvDA,WAAYwD,EAA2C,EAA3CA,UAAWvD,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACtEuD,EAAa,yCACLzD,EAAW0D,UAAUxH,KAAI,SAAClB,EAAGK,GAAJ,OAAY,yBAAKqB,IAAKrB,GAAML,OAGnE,OAAQgF,EAAW2B,OACf,IAAK,YACD,OAAO,6BACF8B,EADE,yBAGP,4BAAQ1B,QAASyB,GAAjB,eAEJ,IAAK,eACL,IAAK,qBACL,IAAK,oBACD,OAAO,kBAAC,EAAD,CAAYxD,WAAYA,EAAYC,WAAYA,EAAYC,cAAeA,IAEtF,IAAK,YACD,OAAO,kBAAC,EAAD,CAAQiC,SAAUnC,EAAWoC,WCO1CuB,EAAW,SAAC,GAEX,IAFaC,EAEd,EAFcA,KAEd,EACoBxD,mBAAS,IAD7B,mBACKyD,EADL,KACUC,EADV,KAEF,OAAO,6BACH,2CACA,0BAAM3C,SAAU,SAACtF,GAAQA,EAAE4C,iBAAkBmF,EAAKC,KAC9C,2BACIE,KAAK,OACLxE,MAAOsE,EAAK5G,SAAU,SAAApB,GAAC,OAAIiI,EAAOjI,EAAEuF,OAAO7B,UAC/C,6CAKGyE,EA7CmB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAQ3C,OAAO,6BACH,6CAAmBD,GACnB,kBAAC,EAAD,CAAUL,KATG,SAACO,GAAD,OAAoBD,EAASE,OAAO,CACjDC,QAAS,EACTxC,KAAM,YACNoC,WACAE,cAMA,8CACA,kBAAC,IAAD,CACIhI,KAAI,6BAAwB8H,EAAxB,UACJK,OAAQ,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAd,OACJ,6BAEQD,EACM,4CACA,6BACGC,EAAKtI,KAAI,SAACuI,GAAD,OACN,yBAAK/H,IAAK+H,EAAEvD,IACR,kBAAC,IAAD,CAAMwD,GAAE,aAAQD,EAAEvD,KAAOuD,EAAEvD,eC3BtDlC,EAAM,IAAIC,IAAI,CAAC,WAAY,EAAK,aAAc,EAAM,OAAS,OAAO,UAAW,EAAK,SAAU,EAAK,aAAc,EAAK,aAAc,IAEjJD,EAAIE,cAAcC,EAAQ,KAEnB,IA6XDwF,EAAoB3F,EAAIK,QA7XF,CAC1B,QAAW,0CACX,MAAS,CACP,CACE,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,OAAU,CACR,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,eAEF,KAAQ,UAEV,SAAY,CACV,KAAQ,WAGZ,SAAY,CACV,SACA,OACA,YAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,MAAS,CACP,KAAQ,CACN,aAEF,KAAQ,WAGZ,SAAY,CACV,YACA,SAEF,KAAQ,YAId,CACE,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,OAAU,CACR,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,eAEF,KAAQ,UAEV,SAAY,CACV,KAAQ,WAGZ,SAAY,CACV,SACA,OACA,YAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,MAAS,CACP,KAAQ,CACN,gBAEF,KAAQ,WAGZ,SAAY,CACV,YACA,SAEF,KAAQ,YAId,CACE,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,OAAU,CACR,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,eAEF,KAAQ,UAEV,SAAY,CACV,KAAQ,WAGZ,SAAY,CACV,SACA,OACA,YAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,MAAS,CACP,KAAQ,CACN,sBAEF,KAAQ,WAGZ,SAAY,CACV,YACA,SAEF,KAAQ,YAId,CACE,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,OAAU,CACR,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,eAEF,KAAQ,UAEV,SAAY,CACV,KAAQ,WAGZ,SAAY,CACV,SACA,OACA,YAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,OAAU,CACR,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,KAAQ,CACN,KAAQ,CACN,QAEF,KAAQ,UAEV,KAAQ,CACN,KAAQ,WAGZ,SAAY,CACV,OACA,QAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,WAEF,KAAQ,WAGZ,SAAY,CACV,YACA,QAEF,KAAQ,YAId,MAAS,CACP,KAAQ,CACN,qBAEF,KAAQ,WAGZ,SAAY,CACV,YACA,SACA,SAEF,KAAQ,YAId,CACE,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,OAAU,CACR,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,eAEF,KAAQ,UAEV,SAAY,CACV,KAAQ,WAGZ,SAAY,CACV,SACA,OACA,YAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,MAAS,CACP,KAAQ,UAEV,KAAQ,SAEV,OAAU,CACR,MAAS,CACP,kBAAqB,GAErB,WAAc,CACZ,QAAW,CACT,MAAS,CACP,kBAAqB,GAErB,WAAc,CACZ,SAAY,CACV,KAAQ,UAEV,WAAc,CACZ,MAAS,CACP,CACE,kBAAqB,GAErB,WAAc,CACZ,KAAQ,CACN,KAAQ,CACN,QAEF,KAAQ,UAEV,KAAQ,CACN,KAAQ,WAGZ,SAAY,CACV,OACA,QAEF,KAAQ,UAEV,CACE,kBAAqB,GAErB,WAAc,CACZ,UAAa,CACX,KAAQ,UAEV,KAAQ,CACN,KAAQ,CACN,WAEF,KAAQ,WAGZ,SAAY,CACV,YACA,QAEF,KAAQ,aAKhB,SAAY,CACV,WACA,cAEF,KAAQ,UAEV,KAAQ,UAGZ,SAAY,CACV,WAEF,KAAQ,UAEV,KAAQ,SAEV,MAAS,CACP,KAAQ,CACN,aAEF,KAAQ,WAGZ,SAAY,CACV,YACA,SACA,SAEF,KAAQ,eC1XX,IAAML,EAAM,IAAIC,IAAI,CAAC,WAAY,EAAK,aAAc,EAAM,OAAS,OAAO,UAAW,EAAK,SAAU,EAAK,aAAc,EAAK,aAAc,IAEjJD,EAAIE,cAAcC,EAAQ,KAEnB,IAeDyF,EAA4B5F,EAAIK,QAfF,CAClC,QAAW,0CACX,kBAAqB,GAErB,WAAc,CACZ,GAAM,CACJ,KAAQ,WAGZ,SAAY,CACV,MAEF,KAAQ,WAIK,SAASC,EAASC,GAC/B,GAAIqF,EAA0BrF,GAC5B,OAAOA,EAEP,MAAM,IAAIC,MACRR,EAAIS,WAAWmF,EAA0BlF,OAAQC,QAAO,SAAC9D,GAAD,MAA0B,OAAdA,EAAE+D,WAAmB,CAACC,QAAS,mBACnG,OACAC,kBAAQP,I,yjBCbd,IAAMsF,EAAS,CACXC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cChBmB,0BDiBnBC,kBAAmB,eACnBC,MAAO,6CAILC,EADMC,IAASC,cAAcV,GAClBQ,OAEXG,EAAW,CAEbC,WAAY,QACZC,cAAe,CACXJ,IAASD,KAAKM,mBAAmBC,YACjCN,IAASD,KAAKQ,kBAAkBD,aAEpCE,UAAW,CAEPC,4BAA6B,kBAAM,KAIrCC,EAAoB,WACtB,OAAO,kBAAC,IAAMC,SAAP,KACH,oDACA,+CACA,kBAAC,IAAD,CAAoBT,SAAUA,EAAUU,aAAcZ,IAASD,WASjEc,EAAoC,SAAC,GAA4B,IAA1BlC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3CC,EAAWiC,cAAXjC,OAEFX,EAAY,kBAAMU,EAASE,OAAO,CACpCC,QAAS,EACTxC,KAAM,aACNoC,SAAUA,EACVE,OAAQA,KAGNlE,EAAa,SAAC6B,GAAD,OAAkBoC,EAASE,OAAO,CACjDC,QAAS,EACTxC,KAAM,YACNoC,SAAUA,EACVE,OAAQA,EACRtB,WAAY,CAAEhB,KAAM,OAAQC,WAG1B5B,EAAa,uCAAG,WAAO3E,GAAP,eAAA4H,EAAA,sEACCe,EAASmC,OAAT,GAAkBxE,KAAM,WAActG,IADvC,cACZ+K,EADY,gBAEZpC,EAASE,OAAO,CAClBC,QAAS,EACTxC,KAAM,YACNoC,SAAUA,EACVE,OAAQA,EACRtB,WAAY,CAAEhB,KAAM,UAAWG,UAAWsE,EAAKpF,MAPjC,2CAAH,sDAWnB,OAAO,kBAAC,IAAD,CACH/E,KAAI,6BAAwB8H,EAAxB,kBAA0CE,GAC9CG,OAAQ,YAA6D,IAA1DC,EAAyD,EAAzDA,UAAWC,EAA8C,EAA9CA,KAClB,GAAID,EACA,OAAO,4CAEX,IAAMgC,EF0SH,SAAkBhH,GAC/B,GAAIoF,EAAkBpF,GACpB,OAAOA,EAEP,MAAM,IAAIC,MACRR,EAAIS,WAAWkF,EAAkBjF,OAAQC,QAAO,SAAC9D,GAAD,MAA0B,OAAdA,EAAE+D,WAAmB,CAACC,QAAS,WAC3F,OACAC,kBAAQP,IEjT6BiH,CAAehC,GAC9C,OAAO,kBAAC,EAAD,CACHxE,WAAYuG,EACZ/C,UAAWA,EACXvD,WAAYA,EACZC,cAAeA,Q,SAMhBuG,E,8EAAf,WAA0BC,GAA1B,SAAAvD,EAAA,sEACUC,MAAMuD,oCAAkC,CAC1CC,OAAQ,OACRF,KAAMG,KAAKC,UAAUJ,GACrBK,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAPtB,4C,+BAYeC,E,8EAAf,WAA0BC,GAA1B,eAAA/D,EAAA,sEACuBC,MAAMuD,oCAAkC,CACvDC,OAAQ,OACRF,KAAMG,KAAKC,UAAUI,GACrBH,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAPtB,cACUV,EADV,YAUWa,EAVX,SAUwCb,EAAKhD,OAV7C,wG,sBAeA,IAAM8D,EAAoB,WACtB,IAAMC,EAAWC,cADW,EAEIlH,mBAAmB,CAAEmH,OAAO,IAFhC,mBAErBC,EAFqB,KAEXC,EAFW,KAQ5B,GAJA7L,qBAAU,WACN,OAAOyJ,EAAKqC,oBAAmB,SAAAC,GAAI,OAAIF,EAAY,CAAEF,OAAO,EAAMI,cACnE,KAEEH,EAASD,MACV,OAAO,yCAKX,GAFC9G,OAAD,QAA6B,kBAAM4E,EAAKuC,YAEnCJ,EAASG,KACV,MAA0B,MAAtBN,EAASQ,SACF,kBAAC,IAAD,CAAUnD,GAAG,MAEb,kBAAC,EAAD,MAIf,IAAMR,EAA0B,CAC5BE,OAAQqC,EACRJ,OAAQY,GAGZ,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAD,CAAO9K,KAAK,IAAI2L,OAAK,GAEbN,EAASG,KACH,kBAAC,EAAD,CAAM1D,SAAUuD,EAASG,KAAKI,IAAK7D,SAAUA,IAC7C,kBAAC,EAAD,OAId,kBAAC,IAAD,CAAO/H,KAAK,aAAa2L,OAAK,GAC1B,kBAAC,EAAD,CAAU7D,SAAUuD,EAASG,KAAKI,IAAK7D,SAAUA,OAa9C8D,EARO,WAClB,OAAO,kBAAC,IAAD,CAAmB1C,SAAUA,KAChC,kBAAC,IAAD,KACI,kBAAC,EAAD,SEpKN2C,GAAcC,QACW,cAA7BzH,OAAO4G,SAASc,UAEe,UAA7B1H,OAAO4G,SAASc,UAEhB1H,OAAO4G,SAASc,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAezD,GACtC0D,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlH,QACf4G,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKErE,GAAUA,EAAOsE,UACnBtE,EAAOsE,SAASR,KAMlBM,QAAQC,IAAI,sCAGRrE,GAAUA,EAAOuE,WACnBvE,EAAOuE,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MClGjEC,IAASjF,OAAO,kBAAC,EAAD,MAASkF,SAASC,eAAe,SDqB1C,SAAkB5E,GACvB,GAA6C,kBAAmB0D,UAAW,CAMzE,GAJkB,IAAImB,IACnBC,GACDlJ,OAAO4G,SAASuC,MAEJC,SAAWpJ,OAAO4G,SAASwC,OAIvC,OAGFpJ,OAAOK,iBAAiB,QAAQ,WAC9B,IAAMwH,EAAK,UAAMqB,GAAN,sBAEP1B,KAgEV,SAAiCK,EAAezD,GAE9CzB,MAAMkF,GACHI,MAAK,SAAAoB,GAEJ,IAAMC,EAAcD,EAAS9C,QAAQgD,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C3B,UAAUC,cAAcjB,MAAMmB,MAAK,SAAAC,GACjCA,EAAawB,aAAazB,MAAK,WAC7BjI,OAAO4G,SAAS+C,eAKpB/B,GAAgBC,EAAOzD,MAG1BwE,OAAM,WACLJ,QAAQC,IACN,oEArFAmB,CAAwB/B,EAAOzD,GAI/B0D,UAAUC,cAAcjB,MAAMmB,MAAK,WACjCO,QAAQC,IACN,iHAMJb,GAAgBC,EAAOzD,OC/C/B2D,I","file":"static/js/main.001419c5.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { Drawing as DrawingModel } from './model/Upload'\n\ntype DrawingProps = {\n    drawing: DrawingModel\n    width: number\n    height: number\n}\n\nfunction scalePath(path: number[], sx: number, sy: number) {\n    const res: number[] = []\n    for (let i = 0; i < path.length; i += 2) {\n        res.push(path[i] * sx, path[i + 1] * sy)\n    }\n    return res\n}\n\nexport const Drawing: React.FC<DrawingProps> = ({ drawing, width, height }) => {\n    const svgRef = useRef<SVGSVGElement>(null)\n\n    useEffect(() => {\n        const e: SVGSVGElement = svgRef.current!\n\n        e.style.width = width + 'px'\n        e.style.height = height + 'px'\n    })\n\n    const scaled: DrawingModel = {\n        paths: drawing.paths.map(path => scalePath(path, width, height))\n    }\n\n    return (\n        <svg ref={svgRef}>\n            {\n                scaled.paths.map((p, idx) =>\n                    <path key={idx}\n                        d={renderPath(p)}\n                        stroke=\"black\"\n                        strokeWidth=\"2\"\n                        fill=\"transparent\" />\n                )\n            }\n        </svg>\n    )\n}\n\nfunction renderPath(p: number[]): string {\n    if (p.length === 0) {\n        return \"\"\n    }\n    if (p.length === 2) {\n        const x = p[0]\n        const y = p[1]\n        return `M ${x} ${y} L ${x + 1} ${y}`\n    }\n    let res = `M ${p[0]} ${p[1]}`\n    for (let idx = 0; idx < p.length; idx += 2) {\n        res += `L ${p[idx]} ${p[idx + 1]}`\n    }\n    return res\n}\n\nexport default Drawing","import produce from 'immer'\nimport React, { useRef } from 'react'\nimport Drawing from './Drawing'\nimport { Drawing as DrawingModel } from './model/Upload'\n\nexport type DraftDrawing = {\n    drawing: DrawingModel\n    inProgress: { [touchId: string]: number }\n}\n\ntype CanvasProps = {\n    draft: DraftDrawing\n    onChange: (d: DraftDrawing) => void\n    width: number\n    height: number\n}\n\ntype Point = { x: number, y: number }\n\ntype PointerMap = { [touchId: string]: Point }\n\nexport const Canvas: React.FC<CanvasProps> = ({ draft, onChange, width, height }) => {\n    const divRef = useRef<HTMLDivElement>(null)\n\n    function pointerStart(pointers: PointerMap) {\n        onChange(produce(draft, (draft) => {\n            for (const ptId in pointers) {\n                draft.inProgress[ptId] = draft.drawing.paths.length\n                const rect = divRef.current!.getBoundingClientRect()\n                const pt = {\n                    x: (pointers[ptId].x - rect.left) / width,\n                    y: (pointers[ptId].y - rect.top) / height,\n                }\n                draft.drawing.paths.push([pt.x, pt.y])\n            }\n        }))\n    }\n\n    function pointerMove(pointers: PointerMap) {\n        onChange(produce(draft, (draft) => {\n            for (const ptId in pointers) {\n                const rect = divRef.current!.getBoundingClientRect()\n                const pt = {\n                    x: (pointers[ptId].x - rect.left) / width,\n                    y: (pointers[ptId].y - rect.top) / height,\n                }\n                draft.drawing.paths[draft.inProgress[ptId]].push(pt.x, pt.y)\n            }\n        }))\n    }\n\n    function touchesToPointers(touches: React.TouchList): PointerMap {\n        const res: PointerMap = {}\n        for (let idx = 0; idx < touches.length; idx++) {\n            const touch = touches.item(idx)\n            res[touch.identifier] = {\n                x: touch.clientX,\n                y: touch.clientY,\n            }\n        }\n        return res\n    }\n\n    function mouseToPointers(e: React.MouseEvent<HTMLDivElement>): PointerMap {\n        return {\n            mouse: { x: e.clientX, y: e.clientY }\n        }\n    }\n\n    function touchStart(e: React.TouchEvent<HTMLDivElement>) {\n        e.preventDefault()\n        pointerStart(touchesToPointers(e.changedTouches))\n    }\n\n    function touchMove(e: React.TouchEvent<HTMLDivElement>) {\n        e.preventDefault()\n        pointerMove(touchesToPointers(e.changedTouches))\n    }\n\n    function mouseStart(e: React.MouseEvent<HTMLDivElement>) {\n        if (e.buttons === 1) { pointerStart(mouseToPointers(e)) }\n    }\n\n    function mouseMove(e: React.MouseEvent<HTMLDivElement>) {\n        if (e.buttons === 1) { pointerMove(mouseToPointers(e)) }\n    }\n\n    return (\n        <div\n            ref={divRef}\n            className=\"canvas\"\n            onTouchStart={touchStart}\n            onTouchMove={touchMove}\n            onMouseDown={mouseStart}\n            onMouseMove={mouseMove}\n            style={{ touchAction: 'none' }}>\n            <Drawing drawing={draft.drawing}\n                width={width} height={height} />\n        </div>)\n}\n\nexport default Canvas","/* tslint:disable */\n// generated by typescript-json-validator\nimport {inspect} from 'util';\nimport Ajv from 'ajv';\nimport Upload from './Upload';\nexport const ajv = new Ajv({\"allErrors\":true,\"coerceTypes\":false,\"format\":\"fast\",\"nullable\":true,\"unicode\":true,\"uniqueItems\":true,\"useDefaults\":true});\n\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n\nexport const UploadSchema = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"allOf\": [\n    {\n      \"defaultProperties\": [\n      ],\n      \"properties\": {\n        \"paths\": {\n          \"items\": {\n            \"items\": {\n              \"type\": \"number\"\n            },\n            \"type\": \"array\"\n          },\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"paths\"\n      ],\n      \"type\": \"object\"\n    },\n    {\n      \"defaultProperties\": [\n      ],\n      \"properties\": {\n        \"kind\": {\n          \"enum\": [\n            \"drawing\"\n          ],\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"kind\"\n      ],\n      \"type\": \"object\"\n    }\n  ]\n};\nexport type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>\nconst rawValidateUpload = ajv.compile(UploadSchema) as ValidateFunction<Upload>;\nexport default function validate(value: unknown): Upload {\n  if (rawValidateUpload(value)) {\n    return value;\n  } else {\n    throw new Error(\n      ajv.errorsText(rawValidateUpload.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'Upload'}) +\n      '\\n\\n' +\n      inspect(value),\n    );\n  }\n}","\nimport React, { useEffect, useRef, useState } from 'react';\nimport Canvas, { DraftDrawing } from './Canvas';\nimport Drawing from './Drawing';\nimport * as export0 from './model/Export0';\nimport { Drawing as DrawingModel } from './model/Upload';\nimport validateUpload from './model/Upload.validator';\n\ntype GameViewProps = {\n    playerGame: export0.PlayerGame\n    startGame: () => void\n    submitWord: (word: string) => void\n    submitDrawing: (s: DrawingModel) => void\n}\n\nconst GameView: React.FC<GameViewProps> = ({ playerGame, startGame, submitWord, submitDrawing }) => {\n    const playerList = <div>\n        Players: {playerGame.playerIds.map((p, idx) => <div key={idx}>{p}</div>)}\n    </div>\n\n    switch (playerGame.state) {\n        case \"UNSTARTED\":\n            return <div>\n                {playerList}\n                Waiting to start game.\n            <button onClick={startGame}>Start Game</button>\n            </div>\n        case \"FIRST_PROMPT\":\n        case \"WAITING_FOR_PROMPT\":\n        case \"RESPOND_TO_PROMPT\":\n            return <ActiveGame playerGame={playerGame} submitWord={submitWord} submitDrawing={submitDrawing} />\n\n        case \"GAME_OVER\":\n            return <Series serieses={playerGame.series} />\n    }\n}\n\ntype ActiveGameProps = {\n    playerGame: export0.FirstPromptGame | export0.WaitingForPromptGame | export0.RespondToPromptGame\n    submitWord: (word: string) => void\n    submitDrawing: (s: DrawingModel) => void\n}\n\nconst ActiveGame: React.FC<ActiveGameProps> = ({ playerGame, submitWord, submitDrawing }) => {\n    const initText = ''\n    const initDraftDrawing = {\n        drawing: {\n            paths: []\n        },\n        inProgress: {},\n    }\n\n    const [textSub, setTextSub] = useState(\"\")\n    const [draftDrawing, setDraftDrawing] = useState<DraftDrawing>(initDraftDrawing)\n\n    const [dims, setDims] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n\n    useEffect(() => {\n        return window.addEventListener('resize', () => setDims({\n            width: window.innerWidth,\n            height: window.innerHeight\n        }));\n    }, [])\n\n    const doTextSub = (e: React.ChangeEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        submitWord(textSub)\n        setTextSub(initText)\n    }\n\n    const doDrawingSub = () => {\n        submitDrawing(draftDrawing.drawing)\n        setDraftDrawing(initDraftDrawing)\n    }\n\n    const firstPrompt = <main id=\"game\">\n        <header>Pictophone!</header>\n        <div className=\"instructions\">Come up with a thing!</div>\n        <form onSubmit={doTextSub}>\n            <input value={textSub} onChange={e => setTextSub(e.target.value)} />\n            <button>Submit</button>\n        </form>\n    </main>\n\n    const waitForPrompt = <main id=\"game\">\n        <header>Pictophone!</header>\n        <div className=\"instructions\">\n            Chill out for a sec while everyone else finishes.\n        </div>\n    </main>\n\n    const canvasHeight1 = dims.height * 0.7\n    const canvasWidth1 = canvasHeight1 * 3 / 4\n    const canvasWidth = Math.min(canvasWidth1, dims.width * 0.95)\n    const canvasHeight = canvasWidth * 4 / 3\n\n    const respond = (playerGame: export0.RespondToPromptGame) =>\n        playerGame.prompt.kind === 'word'\n            ? <main id=\"game\">\n                <div className=\"word-prompt\" >\n                    {playerGame.prompt.word}\n                </div>\n                <Canvas draft={draftDrawing} onChange={setDraftDrawing}\n                    width={canvasWidth} height={canvasHeight} />\n                <button onClick={doDrawingSub}>Submit</button>\n            </main>\n            : <main id=\"game\">\n                <DownloadDrawing drawingId={playerGame.prompt.drawingId}\n                    width={canvasWidth} height={canvasHeight} />\n                <form onSubmit={doTextSub}>\n                    <input value={textSub} onChange={e => setTextSub(e.target.value)} />\n                    <button>Submit</button>\n                </form>\n            </main>\n\n    switch (playerGame.state) {\n        case \"FIRST_PROMPT\":\n            return firstPrompt\n        case \"WAITING_FOR_PROMPT\":\n            return waitForPrompt\n        case \"RESPOND_TO_PROMPT\":\n            return respond(playerGame)\n    }\n}\n\ntype SeriesProps = {\n    serieses: export0.Series[]\n}\n\nconst Series: React.FC<SeriesProps> = ({ serieses }) => {\n    return <main id=\"sharing\">\n        <div className=\"series\">\n            Scroll this way ->\n        </div>\n        {\n            serieses.map((series, seriesIdx) => <div key={seriesIdx} className=\"series\">\n                {\n                    series.entries.map((e, eIdx) => <Entry key={eIdx} entry={e} />)\n                }\n            </div>)\n        }\n    </main>\n}\n\nconst Entry: React.FC<{ entry: export0.SeriesEntry }> = ({ entry }) => {\n    const container = useRef<HTMLDivElement>(null)\n    const [dims, setDims] = useState({ width: 0, height: 0 })\n\n    useEffect(() => {\n        setDims({\n            width: container.current!.offsetWidth,\n            height: container.current!.offsetHeight,\n        });\n    }, [])\n\n    if (entry.submission.kind === 'word') {\n        return <div ref={container}\n            className=\"words\">{entry.submission.word}</div>\n    } else {\n        const width = widthForBox(dims.width, dims.height)\n        return <div ref={container} className=\"drawing\">\n            <DownloadDrawing drawingId={entry.submission.drawingId}\n                width={width} height={4 * width / 3} />\n        </div>\n    }\n}\n\nfunction widthForBox(width: number, height: number): number {\n    let widthFromHeight = height * 0.75\n    return Math.min(width, widthFromHeight)\n}\n\ntype DownloadDrawingProps = {\n    drawingId: string\n    width: number\n    height: number\n}\n\nconst DownloadDrawing: React.FC<DownloadDrawingProps> = ({ drawingId, width, height }) => {\n    const [downloaded, setDownloaded] = useState<DrawingModel | null>(null)\n    useEffect(() => {\n        (async () => {\n            const res = await fetch(\n                `https://storage.googleapis.com/pictophone-app-drawings/${drawingId}`, {\n\n            })\n            const d = validateUpload(await res.json())\n            setDownloaded(d)\n        })()\n    }, [drawingId])\n\n    if (downloaded === null) {\n        return <div>Loading...</div>\n    }\n\n    return <Drawing drawing={downloaded} width={width} height={height} />\n\n}\nexport default GameView","import React, { useState } from 'react';\nimport { FirestoreCollection } from 'react-firestore';\nimport { Link } from 'react-router-dom';\nimport * as base from './base';\n\ntype HomeProps = {\n    playerId: string\n    dispatch: base.Dispatch\n}\n\nconst Home: React.FC<HomeProps> = ({ playerId, dispatch }) => {\n    const joinGame = (gameId: string) => dispatch.action({\n        version: 0,\n        kind: \"join_game\",\n        playerId,\n        gameId,\n    })\n\n    return <div>\n        <h1>User page for {playerId}</h1>\n        <JoinGame join={joinGame} />\n        <h2>Existing Games</h2>\n        <FirestoreCollection\n            path={`versions/0/players/${playerId}/games`}\n            render={({ isLoading, data }: { isLoading: boolean, data: any[] }) => (\n                <div>\n                    {\n                        isLoading\n                            ? <span>Loading...</span>\n                            : <div>\n                                {data.map((r) => (\n                                    <div key={r.id}>\n                                        <Link to={`/g/${r.id}`}>{r.id}</Link></div>))}\n                            </div>\n                    }\n                </div>\n            )} />\n    </div>\n}\n\nconst JoinGame = ({ join }: {\n    join: (gid: string) => void\n}) => {\n    const [gid, setGid] = useState(\"\")\n    return <div>\n        <h2>Join A Game</h2>\n        <form onSubmit={(e) => { e.preventDefault(); join(gid) }}>\n            <input\n                type=\"text\"\n                value={gid} onChange={e => setGid(e.target.value)} />\n            <button>Submit</button>\n        </form>\n    </div>\n}\n\nexport default Home","/* tslint:disable */\n// generated by typescript-json-validator\nimport {inspect} from 'util';\nimport Ajv from 'ajv';\nimport Export from './Export';\nexport const ajv = new Ajv({\"allErrors\":true,\"coerceTypes\":false,\"format\":\"fast\",\"nullable\":true,\"unicode\":true,\"uniqueItems\":true,\"useDefaults\":true});\n\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n\nexport const ExportSchema = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"anyOf\": [\n    {\n      \"allOf\": [\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"gameId\": {\n              \"type\": \"string\"\n            },\n            \"kind\": {\n              \"enum\": [\n                \"player_game\"\n              ],\n              \"type\": \"string\"\n            },\n            \"playerId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"gameId\",\n            \"kind\",\n            \"playerId\"\n          ],\n          \"type\": \"object\"\n        },\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"playerIds\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"state\": {\n              \"enum\": [\n                \"UNSTARTED\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"playerIds\",\n            \"state\"\n          ],\n          \"type\": \"object\"\n        }\n      ]\n    },\n    {\n      \"allOf\": [\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"gameId\": {\n              \"type\": \"string\"\n            },\n            \"kind\": {\n              \"enum\": [\n                \"player_game\"\n              ],\n              \"type\": \"string\"\n            },\n            \"playerId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"gameId\",\n            \"kind\",\n            \"playerId\"\n          ],\n          \"type\": \"object\"\n        },\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"playerIds\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"state\": {\n              \"enum\": [\n                \"FIRST_PROMPT\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"playerIds\",\n            \"state\"\n          ],\n          \"type\": \"object\"\n        }\n      ]\n    },\n    {\n      \"allOf\": [\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"gameId\": {\n              \"type\": \"string\"\n            },\n            \"kind\": {\n              \"enum\": [\n                \"player_game\"\n              ],\n              \"type\": \"string\"\n            },\n            \"playerId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"gameId\",\n            \"kind\",\n            \"playerId\"\n          ],\n          \"type\": \"object\"\n        },\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"playerIds\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"state\": {\n              \"enum\": [\n                \"WAITING_FOR_PROMPT\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"playerIds\",\n            \"state\"\n          ],\n          \"type\": \"object\"\n        }\n      ]\n    },\n    {\n      \"allOf\": [\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"gameId\": {\n              \"type\": \"string\"\n            },\n            \"kind\": {\n              \"enum\": [\n                \"player_game\"\n              ],\n              \"type\": \"string\"\n            },\n            \"playerId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"gameId\",\n            \"kind\",\n            \"playerId\"\n          ],\n          \"type\": \"object\"\n        },\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"playerIds\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"prompt\": {\n              \"anyOf\": [\n                {\n                  \"defaultProperties\": [\n                  ],\n                  \"properties\": {\n                    \"kind\": {\n                      \"enum\": [\n                        \"word\"\n                      ],\n                      \"type\": \"string\"\n                    },\n                    \"word\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"kind\",\n                    \"word\"\n                  ],\n                  \"type\": \"object\"\n                },\n                {\n                  \"defaultProperties\": [\n                  ],\n                  \"properties\": {\n                    \"drawingId\": {\n                      \"type\": \"string\"\n                    },\n                    \"kind\": {\n                      \"enum\": [\n                        \"drawing\"\n                      ],\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"drawingId\",\n                    \"kind\"\n                  ],\n                  \"type\": \"object\"\n                }\n              ]\n            },\n            \"state\": {\n              \"enum\": [\n                \"RESPOND_TO_PROMPT\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"playerIds\",\n            \"prompt\",\n            \"state\"\n          ],\n          \"type\": \"object\"\n        }\n      ]\n    },\n    {\n      \"allOf\": [\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"gameId\": {\n              \"type\": \"string\"\n            },\n            \"kind\": {\n              \"enum\": [\n                \"player_game\"\n              ],\n              \"type\": \"string\"\n            },\n            \"playerId\": {\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"gameId\",\n            \"kind\",\n            \"playerId\"\n          ],\n          \"type\": \"object\"\n        },\n        {\n          \"defaultProperties\": [\n          ],\n          \"properties\": {\n            \"playerIds\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"series\": {\n              \"items\": {\n                \"defaultProperties\": [\n                ],\n                \"properties\": {\n                  \"entries\": {\n                    \"items\": {\n                      \"defaultProperties\": [\n                      ],\n                      \"properties\": {\n                        \"playerId\": {\n                          \"type\": \"string\"\n                        },\n                        \"submission\": {\n                          \"anyOf\": [\n                            {\n                              \"defaultProperties\": [\n                              ],\n                              \"properties\": {\n                                \"kind\": {\n                                  \"enum\": [\n                                    \"word\"\n                                  ],\n                                  \"type\": \"string\"\n                                },\n                                \"word\": {\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"kind\",\n                                \"word\"\n                              ],\n                              \"type\": \"object\"\n                            },\n                            {\n                              \"defaultProperties\": [\n                              ],\n                              \"properties\": {\n                                \"drawingId\": {\n                                  \"type\": \"string\"\n                                },\n                                \"kind\": {\n                                  \"enum\": [\n                                    \"drawing\"\n                                  ],\n                                  \"type\": \"string\"\n                                }\n                              },\n                              \"required\": [\n                                \"drawingId\",\n                                \"kind\"\n                              ],\n                              \"type\": \"object\"\n                            }\n                          ]\n                        }\n                      },\n                      \"required\": [\n                        \"playerId\",\n                        \"submission\"\n                      ],\n                      \"type\": \"object\"\n                    },\n                    \"type\": \"array\"\n                  }\n                },\n                \"required\": [\n                  \"entries\"\n                ],\n                \"type\": \"object\"\n              },\n              \"type\": \"array\"\n            },\n            \"state\": {\n              \"enum\": [\n                \"GAME_OVER\"\n              ],\n              \"type\": \"string\"\n            }\n          },\n          \"required\": [\n            \"playerIds\",\n            \"series\",\n            \"state\"\n          ],\n          \"type\": \"object\"\n        }\n      ]\n    }\n  ]\n};\nexport type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>\nconst rawValidateExport = ajv.compile(ExportSchema) as ValidateFunction<Export>;\nexport default function validate(value: unknown): Export {\n  if (rawValidateExport(value)) {\n    return value;\n  } else {\n    throw new Error(\n      ajv.errorsText(rawValidateExport.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'Export'}) +\n      '\\n\\n' +\n      inspect(value),\n    );\n  }\n}","/* tslint:disable */\n// generated by typescript-json-validator\nimport {inspect} from 'util';\nimport Ajv from 'ajv';\nimport UploadResponse from './UploadResponse';\nexport const ajv = new Ajv({\"allErrors\":true,\"coerceTypes\":false,\"format\":\"fast\",\"nullable\":true,\"unicode\":true,\"uniqueItems\":true,\"useDefaults\":true});\n\najv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));\n\nexport const UploadResponseSchema = {\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"defaultProperties\": [\n  ],\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"id\"\n  ],\n  \"type\": \"object\"\n};\nexport type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>\nconst rawValidateUploadResponse = ajv.compile(UploadResponseSchema) as ValidateFunction<UploadResponse>;\nexport default function validate(value: unknown): UploadResponse {\n  if (rawValidateUploadResponse(value)) {\n    return value;\n  } else {\n    throw new Error(\n      ajv.errorsText(rawValidateUploadResponse.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'UploadResponse'}) +\n      '\\n\\n' +\n      inspect(value),\n    );\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { FirestoreDocument, FirestoreProvider } from 'react-firestore';\nimport { BrowserRouter as Router, Redirect, Route, Switch, useLocation, useParams } from \"react-router-dom\";\nimport './App.css';\nimport * as base from './base';\nimport Config from './config';\nimport GameView from './GameView';\nimport Home from './Home';\nimport Action from './model/Action';\nimport validateExport from './model/Export.validator';\nimport * as export0 from './model/Export0';\nimport * as upload from './model/Upload';\nimport UploadResponse from './model/UploadResponse';\nimport validateUploadResponse from './model/UploadResponse.validator';\n\nconst config = {\n    apiKey: \"AIzaSyCzMg7Q2ByK5UxUd_x730LT8TmOmbA61MU\",\n    authDomain: \"pictophone-app.firebaseapp.com\",\n    databaseURL: \"https://pictophone-app.firebaseio.com\",\n    projectId: \"pictophone-app\",\n    storageBucket: Config().storageBucket,\n    messagingSenderId: \"837882351009\",\n    appId: \"1:837882351009:web:9056a6b26d58fb373ecfe0\"\n};\n\nconst app = firebase.initializeApp(config);\nconst auth = app.auth()\n\nconst uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: () => false\n    }\n};\n\nconst Landing: React.FC = () => {\n    return <React.Fragment>\n        <h1>Hey it's Pictophone!</h1>\n        <p>Care to sign in?</p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </React.Fragment>\n}\n\ntype GamePageProps = {\n    playerId: string\n    dispatch: base.Dispatch\n}\n\nconst GamePage: React.FC<GamePageProps> = ({ playerId, dispatch }) => {\n    const { gameId } = useParams()\n\n    const startGame = () => dispatch.action({\n        version: 0,\n        kind: \"start_game\",\n        playerId: playerId!,\n        gameId: gameId!\n    })\n\n    const submitWord = (word: string) => dispatch.action({\n        version: 0,\n        kind: \"make_move\",\n        playerId: playerId!,\n        gameId: gameId!,\n        submission: { kind: \"word\", word }\n    })\n\n    const submitDrawing = async (drawing: upload.Drawing) => {\n        const resp = await dispatch.upload({ kind: 'drawing', ...drawing })\n        await dispatch.action({\n            version: 0,\n            kind: \"make_move\",\n            playerId: playerId!,\n            gameId: gameId!,\n            submission: { kind: \"drawing\", drawingId: resp.id }\n        })\n    }\n\n    return <FirestoreDocument\n        path={`versions/0/players/${playerId}/games/${gameId}`}\n        render={({ isLoading, data }: { isLoading: boolean, data: any }) => {\n            if (isLoading) {\n                return <span>Loading...</span>;\n            }\n            const pg: export0.PlayerGame = validateExport(data);\n            return <GameView\n                playerGame={pg}\n                startGame={startGame}\n                submitWord={submitWord}\n                submitDrawing={submitDrawing}\n            />\n        }}\n    />\n}\n\nasync function postAction(body: Action): Promise<void> {\n    await fetch(Config().backendAddr + '/action', {\n        method: 'post',\n        body: JSON.stringify(body),\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',       // receive json\n        },\n    });\n}\n\nasync function postUpload(u: upload.Upload): Promise<UploadResponse> {\n    const resp = await fetch(Config().backendAddr + '/upload', {\n        method: 'post',\n        body: JSON.stringify(u),\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',       // receive json\n        },\n    })\n    return validateUploadResponse(await resp.json())\n}\n\ntype AuthInfo = { ready: false } | { ready: true, user: firebase.User | null }\n\nconst Content: React.FC = () => {\n    const location = useLocation()\n    const [authInfo, setAuthInfo] = useState<AuthInfo>({ ready: false })\n\n    useEffect(() => {\n        return auth.onAuthStateChanged(user => setAuthInfo({ ready: true, user }))\n    }, [])\n\n    if (!authInfo.ready) {\n        return <div>Loading!</div>\n    }\n\n    (window as any)['signout'] = () => auth.signOut()\n\n    if (!authInfo.user) {\n        if (location.pathname !== '/') {\n            return <Redirect to=\"/\" />\n        } else {\n            return <Landing />\n        }\n    }\n\n    const dispatch: base.Dispatch = {\n        action: postAction,\n        upload: postUpload,\n    }\n\n    return <Switch>\n        <Route path=\"/\" exact>\n            {\n                authInfo.user\n                    ? <Home playerId={authInfo.user.uid} dispatch={dispatch} />\n                    : <Landing />\n            }\n        </Route>\n\n        <Route path=\"/g/:gameId\" exact>\n            <GamePage playerId={authInfo.user.uid} dispatch={dispatch} />\n        </Route>\n    </Switch>\n}\n\nconst App: React.FC = () => {\n    return <FirestoreProvider firebase={firebase}>\n        <Router>\n            <Content />\n        </Router>\n    </FirestoreProvider>\n}\n\nexport default App;\n","export type Config = {\n    backendAddr: string\n    storageBucket: string\n}\n\nexport default function Config(): Config {\n    return {\n        backendAddr: process.env.REACT_APP_BACKEND!,\n        storageBucket: 'pictophone-app-drawings',\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}