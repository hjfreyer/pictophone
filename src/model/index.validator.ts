/* tslint:disable */
// generated by typescript-json-validator
import Ajv = require('ajv');
import {JoinGameAction1_0, Action1_0, Game1_0, State1_0, CreateGameAction1_1, JoinGameAction1_1, Action1_1, Game1_1, State1_1, AnyAction} from './index';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {JoinGameAction1_0, Action1_0, Game1_0, State1_0, CreateGameAction1_1, JoinGameAction1_1, Action1_1, Game1_1, State1_1, AnyAction};
export const Schema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Action1_0": {
      "defaultProperties": [
      ],
      "properties": {
        "gameId": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "join_game"
          ],
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "version": {
          "enum": [
            "1.0"
          ],
          "type": "string"
        }
      },
      "required": [
        "gameId",
        "kind",
        "playerId",
        "version"
      ],
      "type": "object"
    },
    "Action1_1": {
      "else": {
        "else": {
          "properties": {
            "kind": {
              "enum": [
                "create_game",
                "join_game"
              ],
              "type": "string"
            }
          },
          "required": [
            "kind"
          ]
        },
        "if": {
          "properties": {
            "kind": {
              "enum": [
                "join_game"
              ],
              "type": "string"
            }
          },
          "required": [
            "kind"
          ]
        },
        "then": {
          "$ref": "#/definitions/JoinGameAction1_1"
        }
      },
      "if": {
        "properties": {
          "kind": {
            "enum": [
              "create_game"
            ],
            "type": "string"
          }
        },
        "required": [
          "kind"
        ]
      },
      "then": {
        "$ref": "#/definitions/CreateGameAction1_1"
      }
    },
    "AnyAction": {
      "defaultProperties": [
      ],
      "properties": {
        "gameId": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "join_game"
          ],
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "version": {
          "enum": [
            "1.0"
          ],
          "type": "string"
        }
      },
      "required": [
        "gameId",
        "kind",
        "playerId",
        "version"
      ],
      "type": "object"
    },
    "CreateGameAction1_1": {
      "defaultProperties": [
      ],
      "properties": {
        "gameId": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "create_game"
          ],
          "type": "string"
        },
        "shortCode": {
          "type": "string"
        },
        "version": {
          "enum": [
            "1.1"
          ],
          "type": "string"
        }
      },
      "required": [
        "gameId",
        "kind",
        "shortCode",
        "version"
      ],
      "type": "object"
    },
    "Game1_0": {
      "defaultProperties": [
      ],
      "properties": {
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "players"
      ],
      "type": "object"
    },
    "Game1_1": {
      "defaultProperties": [
      ],
      "properties": {
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shortCode": {
          "type": "string"
        }
      },
      "required": [
        "players",
        "shortCode"
      ],
      "type": "object"
    },
    "JoinGameAction1_0": {
      "defaultProperties": [
      ],
      "properties": {
        "gameId": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "join_game"
          ],
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "version": {
          "enum": [
            "1.0"
          ],
          "type": "string"
        }
      },
      "required": [
        "gameId",
        "kind",
        "playerId",
        "version"
      ],
      "type": "object"
    },
    "JoinGameAction1_1": {
      "defaultProperties": [
      ],
      "properties": {
        "createIfNecessary": {
          "type": "boolean"
        },
        "gameId": {
          "type": "string"
        },
        "kind": {
          "enum": [
            "join_game"
          ],
          "type": "string"
        },
        "playerId": {
          "type": "string"
        },
        "version": {
          "enum": [
            "1.1"
          ],
          "type": "string"
        }
      },
      "required": [
        "gameId",
        "kind",
        "playerId",
        "version"
      ],
      "type": "object"
    },
    "State1_0": {
      "defaultProperties": [
      ],
      "properties": {
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "players"
      ],
      "type": "object"
    },
    "State1_1": {
      "defaultProperties": [
      ],
      "properties": {
        "players": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "shortCode": {
          "type": "string"
        }
      },
      "required": [
        "players",
        "shortCode"
      ],
      "type": "object"
    }
  }
};
ajv.addSchema(Schema, 'Schema')
export function validate(typeName: 'JoinGameAction1_0'): (value: unknown) => JoinGameAction1_0;
export function validate(typeName: 'Action1_0'): (value: unknown) => Action1_0;
export function validate(typeName: 'Game1_0'): (value: unknown) => Game1_0;
export function validate(typeName: 'State1_0'): (value: unknown) => State1_0;
export function validate(typeName: 'CreateGameAction1_1'): (value: unknown) => CreateGameAction1_1;
export function validate(typeName: 'JoinGameAction1_1'): (value: unknown) => JoinGameAction1_1;
export function validate(typeName: 'Action1_1'): (value: unknown) => Action1_1;
export function validate(typeName: 'Game1_1'): (value: unknown) => Game1_1;
export function validate(typeName: 'State1_1'): (value: unknown) => State1_1;
export function validate(typeName: 'AnyAction'): (value: unknown) => AnyAction;
export function validate(typeName: string): (value: unknown) => any {
  const validator: any = ajv.getSchema(`Schema#/definitions/${typeName}`);
  return (value: unknown): any => {
    if (!validator) {
      throw new Error(`No validator defined for Schema#/definitions/${typeName}`)
    }
  
    const valid = validator(value);

    if (!valid) {
      throw new Error(
        'Invalid ' + typeName + ': ' + ajv.errorsText(validator.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: typeName}),
      );
    }

    return value as any;
  };
}