/* tslint:disable */
// generated by typescript-json-validator
import Ajv = require('ajv');
import {StateEntry} from './types';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export {StateEntry};
export const Schema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Partial<StateMap>": {
      "defaultProperties": [
      ],
      "description": "Make all properties in T optional",
      "properties": {
        "0": {
          "anyOf": [
            {
              "allOf": [
                {
                  "defaultProperties": [
                  ],
                  "properties": {
                    "playerOrder": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "players": {
                      "additionalProperties": {
                        "defaultProperties": [
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "defaultProperties": [
                      ],
                      "type": "object"
                    },
                    "state": {
                      "enum": [
                        "UNSTARTED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "playerOrder",
                    "players",
                    "state"
                  ],
                  "type": "object"
                },
                {
                  "defaultProperties": [
                  ],
                  "properties": {
                    "kind": {
                      "enum": [
                        "game_state"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "kind"
                  ],
                  "type": "object"
                }
              ]
            },
            {
              "allOf": [
                {
                  "defaultProperties": [
                  ],
                  "properties": {
                    "playerOrder": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "players": {
                      "additionalProperties": {
                        "defaultProperties": [
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "submissions": {
                            "items": {
                              "anyOf": [
                                {
                                  "defaultProperties": [
                                  ],
                                  "properties": {
                                    "kind": {
                                      "enum": [
                                        "word"
                                      ],
                                      "type": "string"
                                    },
                                    "word": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "kind",
                                    "word"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "defaultProperties": [
                                  ],
                                  "properties": {
                                    "drawingId": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "enum": [
                                        "drawing"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "drawingId",
                                    "kind"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "id",
                          "submissions"
                        ],
                        "type": "object"
                      },
                      "defaultProperties": [
                      ],
                      "type": "object"
                    },
                    "state": {
                      "enum": [
                        "STARTED"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "playerOrder",
                    "players",
                    "state"
                  ],
                  "type": "object"
                },
                {
                  "defaultProperties": [
                  ],
                  "properties": {
                    "kind": {
                      "enum": [
                        "game_state"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "kind"
                  ],
                  "type": "object"
                }
              ]
            }
          ]
        }
      },
      "type": "object"
    },
    "StateEntry": {
      "defaultProperties": [
      ],
      "properties": {
        "iteration": {
          "type": "number"
        },
        "lastModified": {
        },
        "maxVersion": {
          "type": "number"
        },
        "minVersion": {
          "type": "number"
        },
        "versions": {
          "$ref": "#/definitions/Partial<StateMap>"
        }
      },
      "required": [
        "iteration",
        "lastModified",
        "maxVersion",
        "minVersion",
        "versions"
      ],
      "type": "object"
    }
  }
};
ajv.addSchema(Schema, 'Schema')
export function validate(typeName: 'StateEntry'): (value: unknown) => StateEntry;
export function validate(typeName: string): (value: unknown) => any {
  const validator: any = ajv.getSchema(`Schema#/definitions/${typeName}`);
  return (value: unknown): any => {
    if (!validator) {
      throw new Error(`No validator defined for Schema#/definitions/${typeName}`)
    }
  
    const valid = validator(value);

    if (!valid) {
      throw new Error(
        'Invalid ' + typeName + ': ' + ajv.errorsText(validator.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: typeName}),
      );
    }

    return value as any;
  };
}